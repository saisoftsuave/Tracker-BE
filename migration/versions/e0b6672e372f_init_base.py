"""init base

Revision ID: e0b6672e372f
Revises: 
Create Date: 2024-12-13 16:14:47.980256

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e0b6672e372f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organisation',
    sa.Column('organisation_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('organisation_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('organisation_id')
    )
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('project',
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('project_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('organisation_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.organisation_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('team',
    sa.Column('team_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('team_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('organisation_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.organisation_id'], ),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_table('user',
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('task',
    sa.Column('task_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('task_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('userorganisationlink',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('organisation_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.organisation_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'user_id', 'organisation_id')
    )
    op.create_table('userproject',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userprojectlink',
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    op.create_table('userteam',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('team_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userteamlink',
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('team_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'team_id')
    )
    op.create_table('activity',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('task_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('keyboard', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mouse', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('total_time', sa.DateTime(), nullable=False),
    sa.Column('working_time', sa.DateTime(), nullable=False),
    sa.Column('idle_time', sa.DateTime(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.task_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('task_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('comment_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.task_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('screenshot',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('activity_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('screenshot')
    op.drop_table('comment')
    op.drop_table('activity')
    op.drop_table('userteamlink')
    op.drop_table('userteam')
    op.drop_table('userprojectlink')
    op.drop_table('userproject')
    op.drop_table('userorganisationlink')
    op.drop_table('task')
    op.drop_table('user')
    op.drop_table('team')
    op.drop_table('project')
    op.drop_table('role')
    op.drop_table('organisation')
    # ### end Alembic commands ###
